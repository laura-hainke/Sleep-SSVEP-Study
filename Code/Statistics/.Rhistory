theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=0.6) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=0.4) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1.2) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=0.3) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=0.5) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=0.6) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
REMs_long = melt(data_sleep_extra[,c("ID","REMs_count_con","REMs_duration_con","REMs_amplitude_con","REMs_count_exp","REMs_duration_exp","REMs_amplitude_exp")], id.vars="ID", variable.name="variable", value.name="value")
View(REMs_long)
REMs_long = separate_wider_regex(REMs_long, patterns = c(variable="REMs_*","_",condition="*")) # cols = variable, delim = "_", names = c("REMs","variable","condition")
REMs_long = separate_wider_regex(REMs_long, cols = variable, patterns = c(variable="REMs_*","_",condition="*")) #  delim = "_", names = c("REMs","variable","condition")
REMs_long = separate_wider_regex(REMs_long, cols = variable, patterns = c(variable = ".*", "_", condition = ".*")) #  delim = "_", names = c("REMs","variable","condition")
# Median SNR values per condition
medians_REMs = aggregate(value ~ variable * condition, REMs_long, median) # mean likely biased by outliers
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 3) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 4, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 7, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(title="Rapid eye movement parameters", x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="Condition", y="Variable") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7), fontface="bold"),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
rm(data_sleep_extra_long)
# Working directory
setwd("C:\\Users\\Mitarbeiter\\Documents\\Gamma_Sleep\\Github_Repo\\Gamma-Sleep\\Code\\Statistics")
# Function files in current directory
source("GammaSleep_statistics_functions.r")
source("GammaSleep_data-handling_functions.r")
# Libraries
library(chron)
library(ggplot2)
library(tidyr)
library(dplyr)
library(reshape2)
library(scales)
library(see)
# For plots
colour_scheme=data.frame(con="#708090",
exp="#8f2d56",
W="#C9CC00",
N1="#97D1F4",
N2="#74BBE8",
N3="#2B8DCA",
REM="#158774")
nr_datapoints_SSVEP = 25 # 25 ms segments
nr_conditions = 2 # control, experimental
nr_stages = 4 # W, N2, N3, REM (N1 not included)
base_size = 7 # base size of plot text
## Global variables
# Using global environment (<<- assignment) to avoid redundant function arguments
# Path to folders with derivative data
path_derivatives <<- "C:\\Users\\Mitarbeiter\\Documents\\Gamma_Sleep\\Data\\Derivatives\\"
# List of folder names in directory, corresponding to participant numbers
list_IDs <<- list.dirs(path = path_derivatives, full.names = FALSE, recursive = FALSE)
# Remove rejected datasets
list_IDs <<- list_IDs[! list_IDs %in% c("03","15")] # subjects 03 and 15 were drop-outs
data_demo <<- initialize_dataframe("demographic")
data_sleep <<- initialize_dataframe("sleep_quality")
data_sleep_extra <<- initialize_dataframe("sleep_supplementary")
data_PSD <<- initialize_dataframe("PSD_metrics")
data_SSVEP <<- initialize_dataframe("SSVEP_metrics")
View(data_sleep)
View(data_sleep_extra)
View(data_sleep_extra)
source("GammaSleep_data-handling_functions.r")
## Loading data
load_derivative_data()
## Initializing
data_demo <<- initialize_dataframe("demographic")
data_sleep <<- initialize_dataframe("sleep_quality")
data_sleep_extra <<- initialize_dataframe("sleep_supplementary")
data_PSD <<- initialize_dataframe("PSD_metrics")
data_SSVEP <<- initialize_dataframe("SSVEP_metrics")
## Loading data
load_derivative_data()
## Initializing
data_demo <<- initialize_dataframe("demographic")
data_sleep <<- initialize_dataframe("sleep_quality")
data_sleep_extra <<- initialize_dataframe("sleep_supplementary")
data_PSD <<- initialize_dataframe("PSD_metrics")
data_SSVEP <<- initialize_dataframe("SSVEP_metrics")
## Loading data
load_derivative_data()
View(data_sleep_extra)
REMs_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","REMs_count_con","REMs_amplitude_con","REMs_density_con","REMs_count_exp","REMs_amplitude_exp""REMs_density_exp")])
REMs_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","REMs_count_con","REMs_amplitude_con","REMs_density_con","REMs_count_exp","REMs_amplitude_exp","REMs_density_exp")])
View(REMs_long)
View(data_sleep_extra)
View(REMs_long)
# Median SNR values per condition
medians_REMs = aggregate(value ~ variable * condition, REMs_long, median) # mean likely biased by outliers
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
View(data_sleep_extra)
Spindles_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","Spindles_count_con","Spindles_amplitude_con","Spindles_frequency_con","Spindles_count_exp","Spindles_amplitude_exp","Spindles_frequency_exp")])
View(Spindles_long)
ggplot(medians_spindles, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
# Median SNR values per condition
medians_spindles = aggregate(value ~ variable * condition, Spindles_long, median) # mean likely biased by outliers
ggplot(medians_spindles, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
SOs_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","SOs_count_con","SOs_amplitude_con","SOs_frequency_con","SOs_count_exp","SOs_amplitude_exp","SOs_frequency_exp")])
# Median SNR values per condition
medians_SOs = aggregate(value ~ variable * condition, SOs_long, median) # mean likely biased by outliers
ggplot(medians_SOs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
# Working directory
setwd("C:\\Users\\Mitarbeiter\\Documents\\Gamma_Sleep\\Github_Repo\\Gamma-Sleep\\Code\\Statistics")
# Function files in current directory
source("GammaSleep_statistics_functions.r")
source("GammaSleep_data-handling_functions.r")
# Libraries
library(chron)
library(ggplot2)
library(tidyr)
library(dplyr)
library(reshape2)
library(scales)
library(see)
# For plots
colour_scheme=data.frame(con="#708090",
exp="#8f2d56",
W="#C9CC00",
N1="#97D1F4",
N2="#74BBE8",
N3="#2B8DCA",
REM="#158774")
nr_datapoints_SSVEP = 25 # 25 ms segments
nr_conditions = 2 # control, experimental
nr_stages = 4 # W, N2, N3, REM (N1 not included)
base_size = 7 # base size of plot text
## Global variables
# Using global environment (<<- assignment) to avoid redundant function arguments
# Path to folders with derivative data
path_derivatives <<- "C:\\Users\\Mitarbeiter\\Documents\\Gamma_Sleep\\Data\\Derivatives\\"
# List of folder names in directory, corresponding to participant numbers
list_IDs <<- list.dirs(path = path_derivatives, full.names = FALSE, recursive = FALSE)
# Remove rejected datasets
list_IDs <<- list_IDs[! list_IDs %in% c("03","15")] # subjects 03 and 15 were drop-outs
## Initializing
data_demo <<- initialize_dataframe("demographic")
data_sleep <<- initialize_dataframe("sleep_quality")
data_sleep_extra <<- initialize_dataframe("sleep_supplementary")
data_PSD <<- initialize_dataframe("PSD_metrics")
data_SSVEP <<- initialize_dataframe("SSVEP_metrics")
## Loading data
load_derivative_data()
View(data_sleep)
View(data_sleep_extra)
REMs_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","REMs_count_con","REMs_amplitude_con","REMs_density_con","REMs_count_exp","REMs_amplitude_exp","REMs_density_exp")])
# Median SNR values per condition
medians_REMs = aggregate(value ~ variable * condition, REMs_long, median) # mean likely biased by outliers
ggplot(medians_REMs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
spindles_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","Spindles_count_con","Spindles_amplitude_con","Spindles_frequency_con","Spindles_count_exp","Spindles_amplitude_exp","Spindles_frequency_exp")])
# Median SNR values per condition
medians_spindles = aggregate(value ~ variable * condition, spindles_long, median) # mean likely biased by outliers
ggplot(medians_spindles, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
SOs_long = dataframe_wide_to_long(data_sleep_extra[,c("ID","SOs_count_con","SOs_amplitude_con","SOs_frequency_con","SOs_count_exp","SOs_amplitude_exp","SOs_frequency_exp")])
# Median SNR values per condition
medians_SOs = aggregate(value ~ variable * condition, SOs_long, median) # mean likely biased by outliers
ggplot(medians_SOs, aes(x=condition,y=variable,fill=value)) +
geom_tile(color = "white",lwd = 1.5) +
geom_text(aes(label=round(value, 2)), color = "white", size = 5, fontface="bold") +
scale_fill_gradient(low="grey", high="#6082B6") +
labs(x="", y="") + # Labels
coord_fixed(ratio=1) +
theme_minimal(base_size = base_size) + # Background
theme(axis.text = element_text(size=rel(1.7)),
legend.position = 'none',
panel.grid = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
check_normality(data_sleep$REM_lat_exp - data_sleep$REM_lat_con, plot=FALSE)
check_outliers(data_sleep$REM_lat_con, plot=FALSE)
check_outliers(data_sleep$REM_lat_exp, plot=FALSE)
REM_lat_results = test_two_levels(data_sleep$REM_lat_exp, data_sleep$REM_lat_con, parametric=TRUE, alternative="two.sided", verbose=FALSE)
REM latency was inspected post-hoc. An undirected paired t-test was not/significant (_p_ = `r round(REM_lat_results[[1]], 2)`), showing that on average, participants slept for a similarly long time in both the experimental (Mean~exp~ = `r round(mean(data_sleep$REM_lat_exp),2)` min, SD~exp~ = `r round(sd(data_sleep$REM_lat_exp),2)` min)
round(REM_lat_results[[1]], 2)
# Conversion to long format
data_REM_lat_long = dataframe_wide_to_long(data_sleep[,c("ID","REM_lat_con","REM_lat_exp")])
# Plot
ggplot(data_REM_lat_long, aes(x=condition, y=value)) +
geom_violinhalf(aes(fill=condition), flip=1) + # Violin plot shape
geom_point(color="grey", size=2) + # Data points, jittered
geom_line(aes(group = ID), color="grey", linewidth=0.5) + # connect paired dots
stat_summary(fun = "mean", geom="point", shape=18, color = "black", size=5) + # Add mean as point
labs(title="REM Sleep Latency", x="Condition", y="Minutes") + # Labels
scale_fill_manual(values=c(colour_scheme$con, colour_scheme$exp), guide="none") + # Condition colours, remove legend
scale_x_discrete(labels=c("Control","Experimental")) + # X-tick labels
scale_y_continuous(limits=c(315,460),breaks=c(320,390,460)) +
coord_fixed(ratio=0.015) +
theme_minimal(base_size=base_size) + # Background
theme(axis.title.x = element_text(size=rel(2), vjust=-1), # Label sizes, relative
axis.title.y = element_text(size=rel(2), vjust=2),
axis.text = element_text(size=rel(1.7)),
panel.grid.major.x = element_blank(),
plot.title = element_text(size=rel(3)),
plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) # Plot margins
